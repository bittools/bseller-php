<?php
/**
 * BIT Tools Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller
 *
 * @copyright Copyright (c) 2018 B2W Digital - BIT Tools Platform. .
 *
 * @author    Julio Reis <julio.reis@b2wdigital.com>
 */

namespace BSeller\Api\Handler\Request\Sales;

use BSeller\Api\DataTransformer\Sales\Order\Create as Create;
use BSeller\Api\EntityInterface\Sales\Order;
use BSeller\Api\Handler\Request\HandlerAbstract;

class OrderHandler extends HandlerAbstract
{

    /** @var string */
    protected $baseUrlPath = '/api/pedidos';

    public function create(
        $salesChannel,
        $shippingCustomer,
        $billingCustomer,
        $boxCode,
        $shoppingListCode,
        $salesmanCode,
        $emissionDate,
        $includingDate,
        $shipping,
        $brokenDeliveries,
        $items,
        $orderNumber,
        $externalOrderNumber,
        $storeOrderNumber,
        $tagNote,
        $orderSource,
        $payments,
        $orderForConsuming,
        $publicity,
        $freightType,
        $orderType,
        $businessUnit,
        $values
    )
    {
        $transformer = new Create(
            $salesChannel,
            $shippingCustomer,
            $billingCustomer,
            $boxCode,
            $shoppingListCode,
            $salesmanCode,
            $emissionDate,
            $includingDate,
            $shipping,
            $brokenDeliveries,
            $items,
            $orderNumber,
            $externalOrderNumber,
            $storeOrderNumber,
            $tagNote,
            $orderSource,
            $payments,
            $orderForConsuming,
            $publicity,
            $freightType,
            $orderType,
            $businessUnit,
            $values
        );

        $body = $transformer->output();

        /** @var \BSeller\Api\Handler\Response\HandlerInterface $responseHandler */
        $responseHandler = $this->service()->post($this->baseUrlPath(), $body);
        return $responseHandler;
    }

    /**
     * @return null
     */
    public function entityInterface()
    {
        return new Order($this);
    }
}
