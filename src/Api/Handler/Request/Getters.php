<?php
/**
 * B2W Digital - Companhia Digital
 *
 * Do not edit this file if you want to update this SDK for future new versions.
 * For support please contact the e-mail bellow:
 *
 * sdk@e-smart.com.br
 *
 * @category  BSeller
 * @package   BSeller
 *
 * @copyright Copyright (c) 2018 B2W Digital - BIT Tools Platform. .
 *
 * @author    Julio Reis <julio.reis@b2wdigital.com>
 */

namespace BSeller\Api\Handler\Request;

use BSeller\Api\Handler\Request\Catalog\ProductHandler;
use BSeller\Api\Handler\Request\Catalog\Product\VariationHandler;
use BSeller\Api\Handler\Request\Catalog\Product\AttributeHandler;
use BSeller\Api\Handler\Request\Catalog\Product\CategoryHandler;
use BSeller\Api\Handler\Request\Catalog\Product\StockHandler;
use BSeller\Api\Handler\Request\Catalog\Product\PriceHandler;
use BSeller\Api\Handler\Request\Sales\DeliveryHandler;
use BSeller\Api\Handler\Request\Sales\TrackingHandler;
use BSeller\Api\Handler\Request\Sales\PaymentMethodHandler;
use BSeller\Api\Handler\Request\Sales\CarrierHandler;
use BSeller\Api\Handler\Request\Sales\OrderHandler;
use BSeller\Api\Handler\Request\Sales\VoucherHandler;

trait Getters
{

    /**
     * @return ProductHandler
     */
    public function product()
    {
        return new ProductHandler($this);
    }


    /**
     * @return VariationHandler
     */
    public function productVariations()
    {
        return new VariationHandler($this);
    }

    /**
     * @return AttributeHandler
     */
    public function productAttribute()
    {
        return new AttributeHandler($this);
    }

    /**
     * @return CategoryHandler
     */
    public function productCategory()
    {
        return new CategoryHandler($this);
    }

    /**
     * @return StockHandler
     */
    public function productStock()
    {
        return new StockHandler($this);
    }

    /**
     * @return ProductHandler
     */
    public function productPrice()
    {
        return new PriceHandler($this);
    }

    /**
     * @return OrderHandler
     */
    public function order()
    {
        return new OrderHandler($this);
    }

    /**
     * @return PaymentMethodHandler
     */
    public function paymentMethod()
    {
        return new PaymentMethodHandler($this);
    }

    /**
     * @return CarrierHandler
     */
    public function carrier()
    {
        return new CarrierHandler($this);
    }

    /**
     * @return DeliveryHandler
     */
    public function delivery()
    {
        return new DeliveryHandler($this);
    }

    /**
     * @return TrackingHandler
     */
    public function tracking()
    {
        return new TrackingHandler($this);
    }

    /**
     * @return VoucherHandler
     */
    public function voucher()
    {
        return new VoucherHandler($this);
    }
}
